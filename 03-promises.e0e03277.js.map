{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAuBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BbL,EAAKa,iBAAiB,UAAUC,MAAOC,IACrCA,EAAEC,iBAEF,MAAMC,EAAQC,SAASlB,EAAKmB,SAASd,MAAMe,OACrCC,EAAOH,SAASlB,EAAKmB,SAASE,KAAKD,OACnCE,EAASJ,SAASlB,EAAKmB,SAASG,OAAOF,OAE7C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAAG,CAExCpB,EAAcoB,EADTN,GAASM,EAAW,GAAKF,GAI3CG,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEzEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,G,KAqB7E,MAAMyB,EAAS9B,EAAKE,cAAc,UAElC4B,EAAOC,MAAMC,gBAAkB,UAC/BF,EAAOC,MAAME,MAAQ,OACrBH,EAAOC,MAAMG,QAAU,YACvBJ,EAAOC,MAAMI,OAAS,OACtBL,EAAOC,MAAMK,aAAe,MAC5BN,EAAOC,MAAMM,OAAS,UAEArC,EAAKsC,iBAAiB,SAE9BC,SAAQC,IACpBA,EAAMT,MAAMG,QAAU,OACtBM,EAAMT,MAAMU,OAAS,QACrBD,EAAMT,MAAMI,OAAS,iBACrBK,EAAMT,MAAMK,aAAe,KAAK,IAGlCpC,EAAK+B,MAAMW,QAAU,eACrB1C,EAAK+B,MAAMC,gBAAkB,UAC7BhC,EAAK+B,MAAMG,QAAU,OACrBlC,EAAK+B,MAAMI,OAAS","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', async (e) => {\n  e.preventDefault();\n\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    const promiseDelay = delay + (position - 1) * step;\n    const promise = createPromise(position, promiseDelay);\n\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n//add styles \n\nconst button = form.querySelector('button');\n\nbutton.style.backgroundColor = '#007bff';\nbutton.style.color = '#fff';\nbutton.style.padding = '10px 20px';\nbutton.style.border = 'none';\nbutton.style.borderRadius = '5px';\nbutton.style.cursor = 'pointer';\n\nconst inputElements = form.querySelectorAll('input');\n\ninputElements.forEach(input => {\n  input.style.padding = '10px';\n  input.style.margin = '5px 0';\n  input.style.border = '1px solid #ccc';\n  input.style.borderRadius = '5px';\n});\n\nform.style.display = 'inline-block';\nform.style.backgroundColor = '#f0f0f0';\nform.style.padding = '20px';\nform.style.border = '1px solid #ccc';\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","async","e","preventDefault","delay1","parseInt","elements","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$button","style","backgroundColor","color","padding","border","borderRadius","cursor","querySelectorAll","forEach","input","margin","display"],"version":3,"file":"03-promises.e0e03277.js.map"}